{
	// Place your renegade-hud workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"C&C Renegade Lua Class": {
		"prefix": "newclass",
		"description": "A Lua class template that mimics a C++ class, created for porting aspects of Command and Conquer: Renegade to Garry's Mod",
		"isFileTemplate": true,
		"scope": "lua",
		"body": [
			"-- Based on ${1:CppClassName} within ${2:FilePath}.cpp/h",
			"",
			"local STATIC, INSTANCE",
			"",
			"--[[ Class Setup ]] do",
			"",
			"    --- The instanced components of ${3:LuaClassName}",
			"    --- @class ${3}Instance",
			"    --- @field Static ${3} The static table for this instance's class",
			"    INSTANCE = robustclass.Register( \"Renegade_${3}\" )",
			"",
			"    --- The static components of ${3}",
			"    --- @class ${3}",
			"    --- @field Instance ${3}Instance The Metatable used by ${3}Instance",
			"    STATIC = CNC_RENEGADE.${3} or {}",
			"    CNC_RENEGADE.${3} = STATIC",
			"",
			"    STATIC.Instance = INSTANCE",
			"    INSTANCE.Static = STATIC",
			"end",
			"",
			"--[[ Static Functions and Variables ]] do",
			"",
			"    --- [[ Public ]]",
			"",
			"    --- @class ${3}",
			"",
			"",
			"    --- [[ Protected ]]",
			"",
			"    --- @class ${3}",
			"",
			"",
			"    --- [[ Private ]]",
			"",
			"    --- @class ${3}",
			"",
			"end",
			"",
			"--[[ Instanced Functions and Variables ]] do",
			"",
			"    --- [[ Public ]]",
			"",
			"    --- @class ${3}Instance",
			"",
			"    --- Constructs a new ${3}Instance",
			"    --- @vararg any",
			"    function INSTANCE:Renegade_${3}( ... )",
			"        $0",
			"    end",
			"",
			"",
			"    --- [[ Protected ]]",
			"",
			"    --- @class ${3}Instance",
			"",
			"",
			"    --- [[ Private ]]",
			"",
			"    --- @class ${3}Instance",
			"",
			"end"
		]
	},

	"Section": {
		"prefix": "section",
		"description": "A section with a self-contained scope",
		"body": [
			"--[[ $1 ]] do",
			"    $0",
			"end"
		  ],
	},

	"Class Method": {
		"prefix": "method",
		"description": "A Lua Class method template",
		"body": [
			"function ${1|INSTANCE:,STATIC.|}${2:FunctionName}(${3: ... })",
			"    ${0:error( \"Function not yet implemented\" )}",
			"end"
		]
	},

	"Static Getter": {
		"prefix": "gets",
		"description": "Creates a static method that returns a variable",
		"body": [
			"--- @return $1",
			"function STATIC.${2:FunctionName}()",
			"    return STATIC.$3",
			"end"
		]
	},

	"Static Setter": {
		"prefix": "sets",
		"description": "Creates a static method that takes in a value and sets a variable to it",
		"body": [
			"--- @param ${1:ParameterName} ${2:ParameterType}",
			"function STATIC.${3:FunctionName}( $1 )",
			"    STATIC.$4 = $1",
			"end"
		]
	},

	"Instance Getter": {
		"prefix": "geti",
		"description": "Creates an instanced method that returns a variable",
		"body": [
			"--- @return $1",
			"function INSTANCE:${2:FunctionName}()",
			"    return self.$3",
			"end"
		]
	},

	"Instance Setter": {
		"prefix": "seti",
		"description": "Creates an instanced method that takes in a value and sets a variable to it",
		"body": [
			"--- @param ${1:ParameterName} ${2:ParameterType}",
			"function INSTANCE:${3:FunctionName}( $1 )",
			"    self.$4 = $1",
			"end"
		]
	}

}